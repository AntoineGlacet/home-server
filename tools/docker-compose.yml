services:
  # portal to access all other web UI
  homepage:
    container_name: homepage
    restart: unless-stopped
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - ./config/homepage:/app/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - HOMEPAGE_ALLOWED_HOSTS=home.antoineglacet.com
    networks:
      - proxy

  # refresh dynamic IP to cloudflare DNS
  ddclient:
    image: lscr.io/linuxserver/ddclient:latest
    container_name: ddclient
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DDCLIENT_CLOUDFLARE_TOKEN=${DDCLIENT_CLOUDFLARE_TOKEN}
    volumes:
      - ./config/ddclient:/config
    restart: unless-stopped

  # share files with Windows
  samba:
    container_name: samba
    image: dperson/samba
    volumes:
      - ${DATA}:/data
    environment:
      - USERID=${PUID}
      - GROUPID=${PGID}
      - TZ=${TZ}
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    command: >
      samba.sh
        -w "WORKGROUP"
        -s "data;/data;yes;no;no;all"
        -u "${SAMBA_USER};${SAMBA_PASSWORD}"
        -p
        -n
    restart: unless-stopped
  # Ad-blocking DNS server
  adguard:
    container_name: adguard
    image: adguard/adguardhome
    volumes:
      - ./config/adguard/work:/opt/adguardhome/work
      - ./config/adguard/conf:/opt/adguardhome/conf
      - ${CERT}:/cert
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 853:853/tcp
    depends_on:
      - swag
    restart: unless-stopped
    networks:
      - proxy

  # Contaiers management UI
  portainer-ce:
    container_name: portainer
    image: portainer/portainer-ce
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/portainer:/data
    ports:
      - 8000:8000 # Agent
    restart: unless-stopped
    networks:
      - proxy

  # backup
  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/duplicati:/config
      - ${BACKUP}:/backups
      - ${HOMESERVER}:/source
    restart: unless-stopped
    networks:
      - proxy

  # Reverse DNS, nginx & certificates 
  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=antoineglacet.com
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      # - EXTRA_DOMAINS=handbook.kanku.dev
    volumes:
      - ./config/swag:/config
    extra_hosts:
      - "home-assistant:host-gateway"
      - "plex:host-gateway"
    ports:
      - 443:443
      # - 80:80 for http validation only
    restart: unless-stopped
    networks:
      - proxy

  # Authentification
  authelia:
    image: ghcr.io/authelia/authelia:latest
    container_name: authelia
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTHELIA_JWT_SECRET=${AUTHELIA_JWT_SECRET}
      - AUTHELIA_SESSION_SECRET=${AUTHELIA_SESSION_SECRET}
      - AUTHELIA_STORAGE_ENCRYPTION_KEY=${AUTHELIA_STORAGE_ENCRYPTION_KEY}
      - AUTHELIA_SMTP_PASSWORD=${AUTHELIA_SMTP_PASSWORD}
    volumes:
      - ./config/authelia:/config
    restart: unless-stopped
    networks:
      - proxy

  # Restart containers based on health
  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      # docker socket, be careful with this
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  fail2ban:
    image: lscr.io/linuxserver/fail2ban:latest
    container_name: fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/fail2ban:/config
      - /var/log:/var/log:ro
    restart: unless-stopped
  # fast, modern VPN server
  # wireguard:
  #   image: lscr.io/linuxserver/wireguard:latest
  #   container_name: wireguard
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - PEERS=KapPC,Phone #optional
  #     - PEERDNS=adguard # config with adguard needs work.
  #   volumes:
  #     - ./config/wireguard:/config
  #     - /lib/modules:/lib/modules
  #   ports:
  #     - 51820:51820/udp
  #   sysctls:
  #     - net.ipv4.conf.all.src_valid_mark=1
  #   restart: unless-stopped

networks:
  proxy:
    name: homelab_proxy
