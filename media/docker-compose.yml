services:
  # wireguard for NordVPN
  # !!! find the PRIVATE KEY with following command:
  # sudo docker run --rm --cap-add=NET_ADMIN -e USER=email \
  # -e PASS=password -e legacy bubuntux/nordvpn:get_private_key
  nordlynx:
    image: ghcr.io/bubuntux/nordlynx
    container_name: nordlynx
    cap_add:
      - NET_ADMIN #required
    environment:
      - PRIVATE_KEY=${NORDVPN_PRIVATE_KEY} #required
      - NET_LOCAL=${LOCAL_NETWORK}
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    networks:
      - default
      - proxy

  # Torrent client
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - TRANSMISSION_WEB_HOME=/flood-for-transmission/ #optional
    volumes:
      - ./config/transmission:/config
      - ${DOWNLOADS}:/downloads
      - ${WATCH}:/watch
    network_mode: service:nordlynx
    depends_on:
      nordlynx:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "ping", "-c", "1", "google.com" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Indexer aggregator
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=overseerr
    volumes:
      - ./config/prowlarr:/config
    network_mode: service:nordlynx
    depends_on:
      nordlynx:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "ping", "-c", "1", "google.com" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # TV show library manager
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=overseerr
    volumes:
      - ./config/sonarr:/config
      - ${TV}:/tv
      - ${DOWNLOADS}:/downloads
    depends_on:
      - prowlarr
      - transmission
    restart: unless-stopped
    networks:
      - default
      - proxy

  # Movie library manager
  radaar:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    hostname: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=overseerr
    volumes:
      - ./config/radarr:/config
      - ${MOVIES}:/movies
      - ${DOWNLOADS}:/downloads
    depends_on:
      - prowlarr
      - transmission
    restart: unless-stopped
    networks:
      - default
      - proxy

  # Subtitles downloader
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=overseerr
    volumes:
      - ./config/bazarr:/config
      - ${MOVIES}:/movies #optional
      - ${TV}:/tv #optional
    restart: unless-stopped
    networks:
      - default
      - proxy

  # Media server, stream content
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - version=docker
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:plex
      - TP_THEME=overseerr
    volumes:
      - ./config/plex:/config
      - ${MEDIA}:/media
    restart: unless-stopped

  # Media discovery and request management
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/overseer:/config
    restart: unless-stopped
    networks:
      - default
      - proxy

  # Front end for Calibre and sync with Kobo e-reader
  # calibre-web:
  #   image: lscr.io/linuxserver/calibre-web:latest
  #   container_name: calibre-web
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
  #     # - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
  #   volumes:
  #     - ./config/calibre-web:/config
  #     - ${LIBRARY}:/data
  #   ports:
  #     - 8083:8083
  #   restart: unless-stopped
  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:latest
    container_name: calibre-web-automated
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/calibre-web:/config
      - ${LIBRARY}:/calibre-library
      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
      - ${BOOK_INGEST}:/cwa-book-ingest
    networks:
      - default
      - proxy
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/readarr:/config
      - ${LIBRARY}:/books #optional
      - ${DOWNLOADS}:/downloads #optional
    restart: unless-stopped
    networks:
      - default
      - proxy

  syncthing:
    image: syncthing/syncthing
    container_name: syncthing
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "22000:22000/tcp"  # Sync traffic
      - "22000:22000/udp"
      - "21027:21027/udp"  # Discovery
    volumes:
      - ./config/syncthing:/var/syncthing/config
      - ${SAVES}:/var/syncthing/data  # Change this to your media storage path
    networks:
      - default
      - proxy


  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "8191:8191"
    restart: unless-stopped 

networks:
  proxy:
    external: true
    name: homelab_proxy
