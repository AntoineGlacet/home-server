services:
  # wireguard for NordVPN
  # !!! find the PRIVATE KEY with following command:
  # sudo docker run --rm --cap-add=NET_ADMIN -e USER=email \
  # -e PASS=password -e legacy bubuntux/nordvpn:get_private_key
  nordlynx:
    image: ghcr.io/bubuntux/nordlynx
    container_name: nordlynx
    cap_add:
      - NET_ADMIN #required
    environment:
      - PRIVATE_KEY=${NORDVPN_PRIVATE_KEY} #required
      - NET_LOCAL=${LOCAL_NETWORK}
    ports:
      - 51413:51413
      - 51413:51413/udp
      - 9091:9091 # transmission
      - 9696:9696 # prowlarr
    restart: unless-stopped

  # Torrent client
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - TRANSMISSION_WEB_HOME=/flood-for-transmission/ #optional
    volumes:
      - ./config/transmission:/config
      - ${DOWNLOADS}:/downloads
      - ${WATCH}:/watch
    network_mode: service:nordlynx
    depends_on:
      nordlynx:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "ping", "-c", "1", "google.com" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Indexer aggregator
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=overseerr
    volumes:
      - ./config/prowlarr:/config
    network_mode: service:nordlynx
    depends_on:
      nordlynx:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "ping", "-c", "1", "google.com" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # TV show library manager
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=overseerr
    volumes:
      - ./config/sonarr:/config
      - ${TV}:/tv
      - ${DOWNLOADS}:/downloads
    ports:
      - 8989:8989
    depends_on:
      - prowlarr
      - transmission
    restart: unless-stopped

  # Movie library manager
  radaar:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    hostname: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=overseerr
    volumes:
      - ./config/radarr:/config
      - ${MOVIES}:/movies
      - ${DOWNLOADS}:/downloads
    ports:
      - 7878:7878
    depends_on:
      - prowlarr
      - transmission
    restart: unless-stopped

  # Subtitles downloader
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=overseerr
    volumes:
      - ./config/bazarr:/config
      - ${MOVIES}:/movies #optional
      - ${TV}:/tv #optional
    ports:
      - 6767:6767
    restart: unless-stopped

  # Media server, stream content
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - version=docker
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:plex
      - TP_THEME=overseerr
    volumes:
      - ./config/plex:/config
      - ${MEDIA}:/media
    restart: unless-stopped

  # Media discovery and request management
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/overseer:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  # Ebooks library manager and webserver
  # calibre:
  #   image: lscr.io/linuxserver/calibre:latest
  #   container_name: calibre
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ./config/calibre:/config
  #     - ${DATA}:/data
  #   ports:
  #     - 8080:8080/tcp # Calibre desktop gui.
  #     - 8081:8081/tcp # Calibre webserver gui.
  #   restart: unless-stopped
  # Front end for Calibre and sync with Kobo e-reader
  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      # - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./config/calibre-web:/config
      - ${LIBRARY}:/data
    ports:
      - 8083:8083
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/readarr:/config
      - ${LIBRARY}:/books #optional
      - ${DOWNLOADS}:/downloads #optional
    ports:
      - 8787:8787
    restart: unless-stopped

networks:
  default:
    name: media
    driver: bridge
    ipam:
      config:
        - subnet: "10.13.92.0/24"
          gateway: "10.13.92.1" #optional
